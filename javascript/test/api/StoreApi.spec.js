/**
 * Swagger Petstore
 * This is a sample server Petstore server.  You can find out more about Swagger at &lt;a href&#61;&quot;http://swagger.io&quot;&gt;http://swagger.io&lt;/a&gt; or on irc.freenode.net, #swagger.  For this sample, you can use the api key &quot;special-key&quot; to test the authorization filters
 *
 * OpenAPI spec version: 1.0.0
 * Contact: apiteam@wordnik.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * Do not edit the class manually.
 */
import {expect} from 'chai';
import StoreRequests  from '../../src/api/StoreRequests';

describe('StoreApi', function(){
  let requests;
  beforeEach(function() {
    requests = new StoreRequests({
        registerHandler(){
        },
        sendRequest(){
        }
    });

  });


    describe('deleteOrder', function() {
      it('should send request deleteOrder successfully', ()=> {
        //uncomment below and update the code to test deleteOrder
        //return requests.deleteOrder(orderId: string).then(response=> {
        //  if (error) throw error;
        //  expect(response).to.be();
        //});

      });
    });

    describe('getInventory', function() {
      it('should send request getInventory successfully', ()=> {
        //uncomment below and update the code to test getInventory
        //return requests.getInventory().then(response=> {
        //  if (error) throw error;
        //  expect(response).to.be();
        //});

      });
    });

    describe('getOrderById', function() {
      it('should send request getOrderById successfully', ()=> {
        //uncomment below and update the code to test getOrderById
        //return requests.getOrderById(orderId: string).then(response=> {
        //  if (error) throw error;
        //  expect(response).to.be();
        //});

      });
    });

    describe('placeOrder', function() {
      it('should send request placeOrder successfully', ()=> {
        //uncomment below and update the code to test placeOrder
        //return requests.placeOrder(opts: any).then(response=> {
        //  if (error) throw error;
        //  expect(response).to.be();
        //});

      });
    });

});
